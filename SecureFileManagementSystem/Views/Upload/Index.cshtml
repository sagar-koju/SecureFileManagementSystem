@* File: Views/Upload/Index.cshtml *@
@model SecureFileManagementSystem.Models.FileUploadViewModel
@{
    ViewData["Title"] = "Send File";
}
<link rel="stylesheet" href="~/css/upload.css" />

<h2 class="send-title">Upload and Send File</h2>

@if (ViewBag.Message != null)
{
    <div class="alert alert-success">@ViewBag.Message</div>
}
@if (ViewBag.Error != null)
{
    <div class="alert alert-danger">@ViewBag.Error</div>
}

<form asp-controller="Upload" asp-action="UploadFile" method="post" enctype="multipart/form-data" class="send-form">

    @* This part is new. It will render a hidden input ONLY for P2P transfers. *@
    @if (ViewBag.IsP2P)
    {
        <input type="hidden" asp-for="UseP2P" value="true" />
        <div class="alert alert-info">You are starting a real-time Peer-to-Peer transfer.</div>
    }

    <div class="send-field">
        <label asp-for="ReceiverUsername">Receiver Username:</label>
        @* If the username is pre-filled from the Peers page, make the input read-only *@
        @if (ViewBag.IsP2P)
        {
            <input type="text" asp-for="ReceiverUsername" required readonly class="form-control-plaintext" />
        }
        else
        {
            <input type="text" asp-for="ReceiverUsername" required />
        }
        <span asp-validation-for="ReceiverUsername" class="text-danger"></span>
    </div>

    <div class="send-field">
        <label asp-for="Files">Choose File:</label>
        <input type="file" asp-for="Files" multiple required />
        <span asp-validation-for="Files" class="text-danger"></span>
    </div>

    <button type="submit" class="send-button">Send File</button>
</form>